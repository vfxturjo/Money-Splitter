import{h as b,f as ia,e as la,M as Q,Z as ra,g as fa,i as U,j as M,k as R,o as C,x as sa,m as W,n as $,p as ua,a2 as oa,Q as X,aa as k,B as j,G as Z,ab as y,ac as z,ad as da,A as pa,ae as va,af as ca,ag as L,ah as ma,ai as ha,v as _a,t as Ea,D as Da,aj as aa,a9 as Aa,ak as Ta,a0 as O}from"./xpQmlZLd.js";function Ia(l,a){return a}function xa(l,a,e,f){for(var s=[],r=a.length,o=0;o<r;o++)da(a[o].e,s,!0);var v=r>0&&s.length===0&&e!==null;if(v){var E=e.parentNode;pa(E),E.append(e),f.clear(),N(l,a[0].prev,a[r-1].next)}va(s,()=>{for(var m=0;m<r;m++){var p=a[m];v||(f.delete(p.k),N(l,p.prev,p.next)),ca(p.e,!v)}})}function Ca(l,a,e,f,s,r=null){var o=l,v={flags:a,items:new Map,first:null},E=(a&aa)!==0;if(E){var m=l;o=b?M(Ea(m)):m.appendChild(Da())}b&&ia();var p=null,g=!1,i=ra(()=>{var d=e();return ha(d)?d:d==null?[]:j(d)});la(()=>{var d=Q(i),t=d.length;if(g&&t===0)return;g=t===0;let T=!1;if(b){var h=o.data===fa;h!==(t===0)&&(o=U(),M(o),R(!1),T=!0)}if(b){for(var _=null,D,c=0;c<t;c++){if(C.nodeType===8&&C.data===sa){o=C,T=!0,R(!1);break}var n=d[c],u=f(n,c);D=ea(C,v,_,null,n,u,c,s,a,e),v.items.set(u,D),_=D}t>0&&M(U())}b||Na(d,v,o,s,a,f,e),r!==null&&(t===0?p?W(p):p=$(()=>r(o)):p!==null&&ua(p,()=>{p=null})),T&&R(!0),Q(i)}),b&&(o=C)}function Na(l,a,e,f,s,r,o){var B,V,Y,F;var v=(s&Ta)!==0,E=(s&(L|y))!==0,m=l.length,p=a.items,g=a.first,i=g,d,t=null,T,h=[],_=[],D,c,n,u;if(v)for(u=0;u<m;u+=1)D=l[u],c=r(D,u),n=p.get(c),n!==void 0&&((B=n.a)==null||B.measure(),(T??(T=new Set)).add(n));for(u=0;u<m;u+=1){if(D=l[u],c=r(D,u),n=p.get(c),n===void 0){var ta=i?i.e.nodes_start:e;t=ea(ta,a,t,t===null?a.first:t.next,D,c,u,f,s,o),p.set(c,t),h=[],_=[],i=t.next;continue}if(E&&ba(n,D,u,s),(n.e.f&k)!==0&&(W(n.e),v&&((V=n.a)==null||V.unfix(),(T??(T=new Set)).delete(n))),n!==i){if(d!==void 0&&d.has(n)){if(h.length<_.length){var w=_[0],x;t=w.prev;var q=h[0],P=h[h.length-1];for(x=0;x<h.length;x+=1)J(h[x],w,e);for(x=0;x<_.length;x+=1)d.delete(_[x]);N(a,q.prev,P.next),N(a,t,q),N(a,P,w),i=w,t=P,u-=1,h=[],_=[]}else d.delete(n),J(n,i,e),N(a,n.prev,n.next),N(a,n,t===null?a.first:t.next),N(a,t,n),t=n;continue}for(h=[],_=[];i!==null&&i.k!==c;)(i.e.f&k)===0&&(d??(d=new Set)).add(i),_.push(i),i=i.next;if(i===null)continue;n=i}h.push(n),t=n,i=n.next}if(i!==null||d!==void 0){for(var I=d===void 0?[]:j(d);i!==null;)(i.e.f&k)===0&&I.push(i),i=i.next;var S=I.length;if(S>0){var na=(s&aa)!==0&&m===0?e:null;if(v){for(u=0;u<S;u+=1)(Y=I[u].a)==null||Y.measure();for(u=0;u<S;u+=1)(F=I[u].a)==null||F.fix()}xa(a,I,na,p)}}v&&Aa(()=>{var G;if(T!==void 0)for(n of T)(G=n.a)==null||G.apply()}),Z.first=a.first&&a.first.e,Z.last=t&&t.e}function ba(l,a,e,f){(f&L)!==0&&z(l.v,a),(f&y)!==0?z(l.i,e):l.i=e}function ea(l,a,e,f,s,r,o,v,E,m){var p=(E&L)!==0,g=(E&ma)===0,i=p?g?oa(s):X(s):s,d=(E&y)===0?o:X(o),t={i:d,v:i,k:r,a:null,e:null,prev:e,next:f};try{return t.e=$(()=>v(l,i,d,m),b),t.e.prev=e&&e.e,t.e.next=f&&f.e,e===null?a.first=t:(e.next=t,e.e.next=t.e),f!==null&&(f.prev=t,f.e.prev=t.e),t}finally{}}function J(l,a,e){for(var f=l.next?l.next.e.nodes_start:e,s=a?a.e.nodes_start:e,r=l.e.nodes_start;r!==f;){var o=_a(r);s.before(r),r=o}}function N(l,a,e){a===null?l.first=e:(a.next=e,a.e.next=e&&e.e),e!==null&&(e.prev=a,e.e.prev=a&&a.e)}const H={totalAmount:100,totalNoOfPeople:10,peopleData:[{id:1,name:"a",paid:12},{id:2,name:"b",paid:14},{id:3,name:"c",paid:6},{id:4,name:"d",paid:9},{id:5,name:"e",paid:18},{id:6,name:"f",paid:7},{id:7,name:"g",paid:3},{id:8,name:"h",paid:13},{id:9,name:"i",paid:5},{id:10,name:"j",paid:13}]},wa=O({showInputTable:!1,showOutput:!1}),A=O({totalAmount:0,totalNoOfPeople:2,peopleData:[{id:1,name:"",paid:0},{id:2,name:"",paid:0}]});function Oa(){A.totalAmount=H.totalAmount,A.totalNoOfPeople=H.totalNoOfPeople,A.peopleData=H.peopleData}function Pa(l=!1){const a=A.peopleData,e=a.length,f=Math.max(1,Math.floor(A.totalNoOfPeople));if(e!==f){const s=[];for(let r=0;r<f;r++)l&&a[r]?s.push(a[r]):s.push({id:r+1,name:"",paid:0});s.forEach((r,o)=>{r.id=o+1}),A.peopleData=s}}const Sa=O({mermaidLoading:!1,mermaidString:""}),K=O({optimumTransactions:[],fullTableData:[]});function Ma(){const l=A.peopleData.map(a=>{const e=A.totalAmount/A.totalNoOfPeople-a.paid,f=[];return K.optimumTransactions.forEach(([s,r,o])=>{a.name===s&&f.push({to:r,amount:o})}),[a.id,a.name,a.paid,e,f]});return K.fullTableData=l,l}export{wa as a,Ma as b,K as c,A as d,Ca as e,Ia as i,Oa as l,Sa as m,Pa as r};
